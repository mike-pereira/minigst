% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vario.R
\name{model_eval}
\alias{model_eval}
\title{Evaluate a model}
\usage{
model_eval(
  x = NULL,
  y = NULL,
  h = NULL,
  dir = NULL,
  model = createModel(),
  mode = "COV"
)
}
\arguments{
\item{x, y}{Matrices (of same size) whose rows specify the pairs of points at which the covariance is evaluated. The number of columns of these matrices must be the same as the space dimension of the model.}

\item{h}{Vector of lag values at which the covariance is evaluated. These lags are taken in the direction specified by \code{dir}.}

\item{dir}{Direction vector at which the lags in \code{h} are taken.  The size of \code{dir} must be the same as the space dimension of the model.}

\item{model}{Model object to evaluate.}

\item{mode}{Whether to compute the variogram values (\code{mode="VG"}) or covariance values (\code{mode="VG"}).}
}
\value{
A vector containing the evaluations of the model at the specified targets.
}
\description{
Function to evaluate a \pkg{gstlearn} Model object, i.e. to compute the value of the associated covariance function on a set of points.
}
\details{
There are two ways of specifying where the model is valuated:
\itemize{
  \item Either by specifying both the arguments \code{x} and \code{y}.
  \item Or by specifying the argument \code{h} and optionally the argument \code{dir} (whose default value \code{NULL} means that the direction along the vector of ones is taken).
}
}
\examples{
library(minigst)

## Create model
model=createModel(struct=c("EXPONENTIAL", "NUGGET"), range = 0.3, sill = c(1,0.1), ndim=2)

## Evaluate the model along the direction (0,1)
hseq=seq(from=0,to=1,length.out=100)
md_eval_lags=model_eval(h=hseq,dir=c(0,1), model=model,mode="COV")

## Plot Variogram along the direction (0,1) using the function curve
curve(model_eval(h=x, dir=c(0,1), model=model,mode="VG"),from = 0, to =1,n = 10^3,xlab="Lag",ylab="Variogram")

## Evaluate the model on some random points in the unit square
xx=matrix(runif(20),nrow=10,ncol=2)
yy=matrix(runif(20),nrow=10,ncol=2)
md_eval_pts=model_eval(x=xx,y=yy,model=model,mode="COV")



}
