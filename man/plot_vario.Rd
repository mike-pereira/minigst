% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_vario}
\alias{plot_vario}
\title{Plot experimental variograms and cross-variograms.}
\usage{
plot_vario(
  expvario = NA,
  model = NA,
  ivar = -1,
  jvar = -1,
  idir = -1,
  pairDisplay = NA,
  nlag = 100,
  hmax = NA,
  color = NULL,
  title = "",
  legend = TRUE
)
}
\arguments{
\item{expvario}{Experimental variogram(s) (as a \pkg{gstlearn} object).}

\item{model}{Model (as a \pkg{gstlearn} object).}

\item{ivar}{Rank of the variable to be represented: single value between 0 and (Number of variables -1), or -1 for all variables}

\item{jvar}{Rank of the second variable to be represented in multivariate case: single value between 0 and (Number of variables -1), or -1 for all variables}

\item{idir}{Rank of the direction to be represented: single value between 0 and (Number of directions -1), or -1 for all directions}

\item{pairDisplay}{Display information about the number of pairs used to compute the variogram values: "size" = Size of points, "label" = As a label, NA = No information displayed.}

\item{nlag}{Number of distance lags (used if 'expvario' is not defined)}

\item{hmax}{Maximum distance (used if 'expvario' is not defined)}

\item{color}{Single color to use for all curves.}

\item{title}{Title of plot.}

\item{legend}{Whether to plot the legend.}
}
\value{
A \pkg{ggplot2} object containing the plot. If stored in a variable, use the function \code{print} to display the plot.
}
\description{
Function to plot experimental variograms and cross-variograms and overlay a model on top.
}
\examples{
library(minigst)

# Load Data
data("Scotland")

# Create Db
db=dfToDb(df=Scotland, coordnames=c("Longitude", "Latitude"))
db$display()

# Create directional experimental variograms along the directions 30 deg and -30 deg for the variable "Elevation"
varioExp = vario_exp(db=db, vname="Elevation", dir=c(30,-30), nlag=20, dlag=10.)

# Fit a model on the resulting experimental variogram
struct_names = c("NUGGET","SPHERICAL", "SPHERICAL")
model = model_fit(varioExp, struct=struct_names, pruneModel = TRUE)
model$display() # Display the content of the model

# Plot the experimental variogram and the fitted model
plot_vario(varioExp,model = model, pairDisplay = "size",
           title="Model adjustment for Elevation")

}
