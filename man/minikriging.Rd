% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kriging.R
\name{minikriging}
\alias{minikriging}
\title{Perform Kriging}
\usage{
minikriging(
  dbin,
  dbout,
  vname,
  model,
  type = "ordinary",
  polDrift = NULL,
  extDrift = NULL,
  mean = NULL,
  neighborhood = "unique",
  std = TRUE,
  prefix = "K"
)
}
\arguments{
\item{dbin}{Db object containing the data points.}

\item{dbout}{Db object containing the target points, i.e. the points where the kriging predictor will be computed.}

\item{vname}{Name of the variable(s) to be predicted, stored as a (vector of) string(s).}

\item{model}{Model object containing the model used for kriging. For universal kriging, the model should be fitted on residuals.}

\item{type}{Type of kriging: either "simple" or "ordinary". Ignored if `polDrift` or `extDrift` is specified, in which case, universal kriging is performed.}

\item{polDrift}{Integer specifying the order of the polynomial drift for universal kriging.}

\item{extDrift}{Name of the variable(s) specifying the external drift, stored as a (vector of) string(s), for universal kriging with external drift.}

\item{mean}{Mean value if simple kriging is requested. Ignored when other types of kriging are performed.}

\item{neighborhood}{Type of neighborhood to used, either "unique" or a vector of the form (radius), (nmin, nmax) or (nmin, nmax, radius). See details.}

\item{prefix}{Prefix used to store the results}

\item{stdev}{Boolean value indicating whether the prediction standard deviation should be computed.}
}
\value{
The function directly adds the kriging predictions (and if applicable, standard-deviations) to the Db in `dbout`. The names of these newly created variables will be of the form `prefix.vname.estim` for the predictions and  `prefix.vname.stdev` for the standard deviation.
}
\description{
Function to perform the kriging from a data set to a target  \pkg{gstlearn} DbGrid object.
}
\details{
When specifying moving neighborhoods, the vector (nmin, nmax, radius) indicates the minimum and the maximum number of points in the neighborhood and the radius of the neighborhood.
}
\examples{
library(minigst)

# Load Data
data("Scotland") # Dataframe containing the observations
data("ScotlandGrid") # Dattaframe containing the target prediction locations

# Create Observation grid
obsDb=dfToDb(df=Scotland, coordnames=c("Longitude", "Latitude"))


# Create directional experimental variograms along the directions 30 deg and -30 deg for the variable "Elevation"
varioExp = vario_exp(db=obsDb, vname="Elevation", dir=c(30,-30), nlag=20, dlag=10.)
# Fit a model on the resulting experimental variogram
struct_names = c("NUGGET","SPHERICAL", "SPHERICAL")
model = model_fit(varioExp, struct=struct_names, pruneModel = TRUE)

# Create target grid
targetDb=dfToDbGrid(df=ScotlandGrid,coordnames=c("Longitude","Latitude"))

# Perform ordinary kriging predictions and compute standard deviations for the variable `January_temp`
minikriging(obsDb, targetDb, vname = "January_temp", model = model, std = TRUE)
 
# Plot kriging predictions
dbplot_grid(targetDb,color="K.January_temp.estim")
dbplot_point(obsDb,size="January_temp",sizeRange=c(0.1,2),add=TRUE,title="Kriging predictions on grid")

# Plot kriging standard deviations
dbplot_grid(targetDb,color="K.January_temp.stdev")
dbplot_point(obsDb,size="January_temp",sizeRange=c(0.1,2),add=TRUE,title="Kriging std dev")

}
