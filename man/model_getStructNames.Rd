% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vario.R
\name{model_getStructNames}
\alias{model_getStructNames}
\alias{model_getRanges}
\alias{model_getScales}
\alias{model_getSills}
\alias{model_getAnisoAngles}
\title{Extract parameters from a Model object}
\usage{
model_getStructNames(model)

model_getRanges(model)

model_getScales(model)

model_getSills(model)

model_getAnisoAngles(model)
}
\arguments{
\item{model}{Model object}
}
\value{
A matrix or vector containing the extracted parameters.
}
\description{
Functions to extract the parameters of a Model Object
}
\details{
Let `Nstruct` be the number of basic structures in the model, and `Nvar` its number of  variables, and `Ndim` the number of space dimsensions.
\itemize{
  \item \code{model_getStructNames} returns a vector of size `Nsctruct` containing the names of the basic structures composing the model.
  \item \code{model_getRanges} returns a matrix of size `Nstruct x Ndim` where the rows contain the range values of each basic structure of the model, and the columns to the range values in the principal direction and cross-direction(s) of the basic structure.
  \item \code{model_getScales} returns a matrix of size `Nstruct x Ndim` where the rows contain the scale values of each basic structure of the model, and the columns to the scale values in the principal direction and cross-direction(s) of the basic structure.
  \item \code{model_getSills} returns an array of size `Nvar x Nvar x Nstruct`: the first two dimensions correspond the covariance matrix between the variables modeled in a given basic structure, and the third dimension corresponds to the different basic structures. For instance, \code{model_getSills(model)[, , 1]} returns the covariance matrix between the `Nvar` variables, as modeled by the first basic structure in the model. If `Nvar=1`, then we retrieve the variance of the only variable modeled by the basic structure.
  \item \code{model_getAngles} returns a matrix of size `Nstruct x (Ndim - 1)` whose rows contain the anisotropy angle(s) of each basic structure.
}
}
\examples{
library(minigst)

## Create model
model=createModel(struct=c("EXPONENTIAL", "NUGGET"), range = 0.3, sill = c(1,0.1), ndim=2)

## Extract ranges
model_getRanges(model)


}
