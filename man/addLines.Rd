% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{addLines}
\alias{addLines}
\title{Add lines to an existing plot}
\usage{
addLines(
  plt = last_plot(),
  a = NULL,
  b = NULL,
  h = NULL,
  v = NULL,
  color = "black",
  linetype = 1
)
}
\arguments{
\item{plt}{A \pkg{ggplot2} plot object.}

\item{a, b}{Slope and intercept of the line (single values).}

\item{h}{Value defining an horizontal line.}

\item{v}{Value defining a vertical line.}

\item{color}{Name of the color of the line.}

\item{linetype}{Type of line, specified by either an integer (0-6) or a name (0 = "blank", 1 = "solid", 2 = "dashed", 3 = "dotted", 4 = "dotdash", 5 = "longdash", 6 = "twodash").}
}
\value{
A \pkg{ggplot2} object containing the updated plot.
}
\description{
Function to add lines to an existing plot.
}
\examples{
library(minigst)

# Load Data and create Db
data("Scotland")
db=dfToDb(df=Scotland, coordnames=c("Longitude", "Latitude"))

# Create a plot of  the variable Elevation
plt=dbplot_point(db=db,size="Elevation")

# Add  a vertical line to the plot
plt=addLines(plt=plt,v=300,color="orange")

# Add a  line y = 5 * x +100
plt=addLines(plt=plt,a=5,b=100,color="blue",linetype=2)

# Display the plot
print(plt)

## Alternatively, without using print (creates a new, updated plot each time)
dbplot_point(db=db,size="Elevation")
addLines(v=300, color = "orange")
addLines(a=5,b=100,color="blue",linetype=2)

}
