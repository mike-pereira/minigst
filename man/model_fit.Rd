% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vario.R
\name{model_fit}
\alias{model_fit}
\title{Fit a model on experimental variograms or maps}
\usage{
model_fit(
  vario,
  polDrift = NULL,
  extDrift = NULL,
  struct = "SPHERICAL",
  pruneModel = TRUE,
  anisoModel = TRUE
)
}
\arguments{
\item{vario}{Experimental variogram(s) or variogram map (as a \pkg{gstlearn} object). See \emph{Details}.}

\item{polDrift}{Integer specifying the order of the polynomial drift.}

\item{extDrift}{Name of the variable(s) specifying the external drift, stored as a (vector of) string(s).}

\item{struct}{Vector containing the names of the desired basic structures. The list of available structures is obtained by calling the function \code{printAllStruct()}.}

\item{pruneModel}{Whether or not to prune the model. See \emph{Details}.}

\item{anisoModel}{Whether or not to fit an anistropic model.}
}
\value{
A \pkg{gstlearn} Model object containing the fitted model.
}
\description{
Function to fit a model on an experimental variogram, a set of experimental (cross-)variograms or a variogram map.
}
\details{
The argument \code{vario} is specified as the output of the \code{vario_exp} function (for experimental variograms)
or as the output of the \code{vario_map} function (for variogram maps).

The fitting function first tries to fit a model containing all the structures specified in \code{struct}. if \code{pruneModel = TRUE},
this model is pruned, i.e. the structures associated with negligible variances are discarded from the model, and a new fit is performed.
These last two steps are repeated until no basic structures can be removed.

Note that fitting variogram maps using drifts is not supported yet.
}
\examples{
library(minigst)

# Load Data
data("Scotland")

# Create Db
db=dfToDb(df=Scotland, coordnames=c("Longitude", "Latitude"))
db$display()

# Create directional experimental variograms along the directions 30 deg and -30 deg for the variable "Elevation"
varioExp = vario_exp(db=db, vname="Elevation", dir=c(30,-30), nlag=20, dlag=10.)

# Fit a model on the resulting experimental variogram
struct_names = c("NUGGET","SPHERICAL", "SPHERICAL")
model = model_fit(varioExp, struct=struct_names, pruneModel = TRUE)
model$display() # Display the content of the model

# Plot the experimental variogram and the fitted model
plot_vario(varioExp,model = model, pairDisplay = "size",
           title="Model adjustment for Elevation")


}
